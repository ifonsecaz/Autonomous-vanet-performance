//
// Generated file, do not edit! Created by nedtool 5.7 from veins_inet/VeinsInetSampleMessage.msg.
//

#ifndef __VEINSINETSAMPLEMESSAGE_M_H
#define __VEINSINETSAMPLEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef VEINS_INET_API
#  if defined(VEINS_INET_EXPORT)
#    define VEINS_INET_API  OPP_DLLEXPORT
#  elif defined(VEINS_INET_IMPORT)
#    define VEINS_INET_API  OPP_DLLIMPORT
#  else
#    define VEINS_INET_API
#  endif
#endif



class VeinsInetSampleMessage;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>veins_inet/VeinsInetSampleMessage.msg:34</tt> by nedtool.
 * <pre>
 * //
 * // Example message definition
 * //
 * class VeinsInetSampleMessage extends inet::FieldsChunk
 * {
 *     string roadId;
 * }
 * </pre>
 */
class VEINS_INET_API VeinsInetSampleMessage : public ::inet::FieldsChunk
{
  protected:
    omnetpp::opp_string roadId;

  private:
    void copy(const VeinsInetSampleMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const VeinsInetSampleMessage&);

  public:
    const char* msgr[9];

    int msgRec;
    double lastC;

    int env0;
    int env1;
    int env2;
    int env3;
    int env4;
    int env5;
    int env6;
    int env7;
    int env8;
    int env9;
        int env10;
        int env11;
        int env12;
        int env13;
        int env14;
        int env15;
        int env16;
        int env17;
        int env18;
            int env19;
            int env20;
            int env21;
            int env22;
            int env23;
            int env24;
            int env25;
            int env26;
            int env27;
                int env28;
                int env29;
                int env30;


    int renv0;
    int renv1;
    int renv2;
    int renv3;
    int renv4;
    int renv5;
    int renv6;
    int renv7;
    int renv8;
    int renv9;
        int renv10;
        int renv11;
        int renv12;
        int renv13;
        int renv14;
        int renv15;
        int renv16;
        int renv17;
        int renv18;
            int renv19;
            int renv20;
            int renv21;
            int renv22;
            int renv23;
            int renv24;
            int renv25;
            int renv26;
            int renv27;
                int renv28;
                int renv29;
                int renv30;

    const char* pastVal00;
    const char* pastVal10;
    const char* pastVal20;
    const char* pastVal30;
    const char* pastVal40;
    const char* pastVal50;
    const char* pastVal60;
    const char* pastVal70;
    const char* pastVal80;
    const char* pastVal01;
    const char* pastVal11;
    const char* pastVal21;
    const char* pastVal31;
    const char* pastVal41;
    const char* pastVal51;
    const char* pastVal61;
    const char* pastVal71;
    const char* pastVal81;
    const char* pastVal02;
    const char* pastVal12;
    const char* pastVal22;
    const char* pastVal32;
    const char* pastVal42;
    const char* pastVal52;
    const char* pastVal62;
    const char* pastVal72;
    const char* pastVal82;
    const char* pastVal03;
    const char* pastVal13;
    const char* pastVal23;
    const char* pastVal33;
    const char* pastVal43;
    const char* pastVal53;
    const char* pastVal63;
    const char* pastVal73;
    const char* pastVal83;
    const char* pastVal04;
    const char* pastVal14;
    const char* pastVal24;
    const char* pastVal34;
    const char* pastVal44;
    const char* pastVal54;
    const char* pastVal64;
    const char* pastVal74;
    const char* pastVal84;
    const char* pastVal05;
    const char* pastVal15;
    const char* pastVal25;
    const char* pastVal35;
    const char* pastVal45;
    const char* pastVal55;
    const char* pastVal65;
    const char* pastVal75;
    const char* pastVal85;

    const char* pastVal90;
        const char* pastVal100;
        const char* pastVal110;
        const char* pastVal120;
        const char* pastVal130;
        const char* pastVal140;
        const char* pastVal150;
        const char* pastVal160;
        const char* pastVal170;
        const char* pastVal91;
        const char* pastVal101;
        const char* pastVal111;
        const char* pastVal121;
        const char* pastVal131;
        const char* pastVal141;
        const char* pastVal151;
        const char* pastVal161;
        const char* pastVal171;
        const char* pastVal92;
        const char* pastVal102;
        const char* pastVal112;
        const char* pastVal122;
        const char* pastVal132;
        const char* pastVal142;
        const char* pastVal152;
        const char* pastVal162;
        const char* pastVal172;
        const char* pastVal93;
        const char* pastVal103;
        const char* pastVal113;
        const char* pastVal123;
        const char* pastVal133;
        const char* pastVal143;
        const char* pastVal153;
        const char* pastVal163;
        const char* pastVal173;
        const char* pastVal94;
        const char* pastVal104;
        const char* pastVal114;
        const char* pastVal124;
        const char* pastVal134;
        const char* pastVal144;
        const char* pastVal154;
        const char* pastVal164;
        const char* pastVal174;
        const char* pastVal95;
        const char* pastVal105;
        const char* pastVal115;
        const char* pastVal125;
        const char* pastVal135;
        const char* pastVal145;
        const char* pastVal155;
        const char* pastVal165;
        const char* pastVal175;

        const char* pastVal180;
                const char* pastVal190;
                const char* pastVal200;
                const char* pastVal210;
                const char* pastVal220;
                const char* pastVal230;
                const char* pastVal240;
                const char* pastVal250;
                const char* pastVal260;
                const char* pastVal181;
                const char* pastVal191;
                const char* pastVal201;
                const char* pastVal211;
                const char* pastVal221;
                const char* pastVal231;
                const char* pastVal241;
                const char* pastVal251;
                const char* pastVal261;
                const char* pastVal182;
                const char* pastVal192;
                const char* pastVal202;
                const char* pastVal212;
                const char* pastVal222;
                const char* pastVal232;
                const char* pastVal242;
                const char* pastVal252;
                const char* pastVal262;
                const char* pastVal183;
                const char* pastVal193;
                const char* pastVal203;
                const char* pastVal213;
                const char* pastVal223;
                const char* pastVal233;
                const char* pastVal243;
                const char* pastVal253;
                const char* pastVal263;
                const char* pastVal184;
                const char* pastVal194;
                const char* pastVal204;
                const char* pastVal214;
                const char* pastVal224;
                const char* pastVal234;
                const char* pastVal244;
                const char* pastVal254;
                const char* pastVal264;
                const char* pastVal185;
                const char* pastVal195;
                const char* pastVal205;
                const char* pastVal215;
                const char* pastVal225;
                const char* pastVal235;
                const char* pastVal245;
                const char* pastVal255;
                const char* pastVal265;

                const char* pastVal270;
                        const char* pastVal280;
                        const char* pastVal290;
                        const char* pastVal300;
                        const char* pastVal271;
                        const char* pastVal281;
                        const char* pastVal291;
                        const char* pastVal301;
                        const char* pastVal272;
                        const char* pastVal282;
                        const char* pastVal292;
                        const char* pastVal302;
                        const char* pastVal273;
                        const char* pastVal283;
                        const char* pastVal293;
                        const char* pastVal303;
                        const char* pastVal274;
                        const char* pastVal284;
                        const char* pastVal294;
                        const char* pastVal304;
                        const char* pastVal275;
                        const char* pastVal285;
                        const char* pastVal295;
                        const char* pastVal305;

                        std::vector<const char *> nodo1;
                        std::vector<const char *> nodo2;
                        std::vector<const char *> nodo3;
                        std::vector<const char *> nodo4;
                        std::vector<const char *> nodo5;
                        std::vector<const char *> nodo6;
                        std::vector<const char *> nodo7;
                        std::vector<const char *> nodo8;
                        std::vector<const char *> nodo9;
                        std::vector<const char *> nodo10;
                        std::vector<const char *> nodo11;
                        std::vector<const char *> nodo12;
                        std::vector<const char *> nodo13;
                        std::vector<const char *> nodo14;
                        std::vector<const char *> nodo15;
                        std::vector<const char *> nodo16;
                        std::vector<const char *> nodo17;
                        std::vector<const char *> nodo18;
                        std::vector<const char *> nodo19;
                        std::vector<const char *> nodo20;
                        std::vector<const char *> nodo21;
                        std::vector<const char *> nodo22;
                        std::vector<const char *> nodo23;
                        std::vector<const char *> nodo24;
                        std::vector<const char *> nodo25;
                        std::vector<const char *> nodo26;
                        std::vector<const char *> nodo27;
                        std::vector<const char *> nodo28;
                        std::vector<const char *> nodo29;
                        std::vector<const char *> nodo30;
                        std::vector<const char *> nodo0;



    VeinsInetSampleMessage();
    VeinsInetSampleMessage(const VeinsInetSampleMessage& other);
    virtual ~VeinsInetSampleMessage();
    VeinsInetSampleMessage& operator=(const VeinsInetSampleMessage& other);
    virtual VeinsInetSampleMessage *dup() const override {return new VeinsInetSampleMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getRoadId() const;
    virtual void setRoadId(const char * roadId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VeinsInetSampleMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VeinsInetSampleMessage& obj) {obj.parsimUnpack(b);}

#endif // ifndef __VEINSINETSAMPLEMESSAGE_M_H

